import { CookieOptionsProvider } from './cookie-options-provider';
import { CookieOptions } from './cookie-options.model';
import * as ɵngcc0 from '@angular/core';
export interface ICookieService {
    get(key: string): string;
    getObject(key: string): Object;
    getAll(): Object;
    put(key: string, value: string, options?: CookieOptions): void;
    putObject(key: string, value: Object, options?: CookieOptions): void;
    remove(key: string, options?: CookieOptions): void;
    removeAll(options?: CookieOptions): void;
}
export declare class CookieService implements ICookieService {
    private _optionsProvider;
    protected options: CookieOptions;
    protected get cookieString(): string;
    protected set cookieString(val: string);
    constructor(_optionsProvider: CookieOptionsProvider);
    /**
     * @name CookieService#get
     *
     * @description
     * Returns the value of given cookie key.
     *
     * @param key Id to use for lookup.
     * @returns Raw cookie value.
     */
    get(key: string): string;
    /**
     * @name CookieService#getObject
     *
     * @description
     * Returns the deserialized value of given cookie key.
     *
     * @param key Id to use for lookup.
     * @returns Deserialized cookie value.
     */
    getObject(key: string): Object;
    /**
     * @name CookieService#getAll
     *
     * @description
     * Returns a key value object with all the cookies.
     *
     * @returns All cookies
     */
    getAll(): Object;
    /**
     * @name CookieService#put
     *
     * @description
     * Sets a value for given cookie key.
     *
     * @param key Id for the `value`.
     * @param value Raw value to be stored.
     * @param options (Optional) Options object.
     */
    put(key: string, value: string, options?: CookieOptions): void;
    /**
     * @name CookieService#putObject
     *
     * @description
     * Serializes and sets a value for given cookie key.
     *
     * @param key Id for the `value`.
     * @param value Value to be stored.
     * @param options (Optional) Options object.
     */
    putObject(key: string, value: Object, options?: CookieOptions): void;
    /**
     * @name CookieService#remove
     *
     * @description
     * Remove given cookie.
     *
     * @param key Id of the key-value pair to delete.
     * @param options (Optional) Options object.
     */
    remove(key: string, options?: CookieOptions): void;
    /**
     * @name CookieService#removeAll
     *
     * @description
     * Remove all cookies.
     */
    removeAll(options?: CookieOptions): void;
    private _cookieReader;
    private _cookieWriter;
    private _buildCookieString;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<CookieService>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<CookieService>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29va2llLnNlcnZpY2UuZC50cyIsInNvdXJjZXMiOlsiY29va2llLnNlcnZpY2UuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7O0FBRUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFzRkEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb29raWVPcHRpb25zUHJvdmlkZXIgfSBmcm9tICcuL2Nvb2tpZS1vcHRpb25zLXByb3ZpZGVyJztcbmltcG9ydCB7IENvb2tpZU9wdGlvbnMgfSBmcm9tICcuL2Nvb2tpZS1vcHRpb25zLm1vZGVsJztcbmV4cG9ydCBpbnRlcmZhY2UgSUNvb2tpZVNlcnZpY2Uge1xuICAgIGdldChrZXk6IHN0cmluZyk6IHN0cmluZztcbiAgICBnZXRPYmplY3Qoa2V5OiBzdHJpbmcpOiBPYmplY3Q7XG4gICAgZ2V0QWxsKCk6IE9iamVjdDtcbiAgICBwdXQoa2V5OiBzdHJpbmcsIHZhbHVlOiBzdHJpbmcsIG9wdGlvbnM/OiBDb29raWVPcHRpb25zKTogdm9pZDtcbiAgICBwdXRPYmplY3Qoa2V5OiBzdHJpbmcsIHZhbHVlOiBPYmplY3QsIG9wdGlvbnM/OiBDb29raWVPcHRpb25zKTogdm9pZDtcbiAgICByZW1vdmUoa2V5OiBzdHJpbmcsIG9wdGlvbnM/OiBDb29raWVPcHRpb25zKTogdm9pZDtcbiAgICByZW1vdmVBbGwob3B0aW9ucz86IENvb2tpZU9wdGlvbnMpOiB2b2lkO1xufVxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQ29va2llU2VydmljZSBpbXBsZW1lbnRzIElDb29raWVTZXJ2aWNlIHtcbiAgICBwcml2YXRlIF9vcHRpb25zUHJvdmlkZXI7XG4gICAgcHJvdGVjdGVkIG9wdGlvbnM6IENvb2tpZU9wdGlvbnM7XG4gICAgcHJvdGVjdGVkIGdldCBjb29raWVTdHJpbmcoKTogc3RyaW5nO1xuICAgIHByb3RlY3RlZCBzZXQgY29va2llU3RyaW5nKHZhbDogc3RyaW5nKTtcbiAgICBjb25zdHJ1Y3Rvcihfb3B0aW9uc1Byb3ZpZGVyOiBDb29raWVPcHRpb25zUHJvdmlkZXIpO1xuICAgIC8qKlxuICAgICAqIEBuYW1lIENvb2tpZVNlcnZpY2UjZ2V0XG4gICAgICpcbiAgICAgKiBAZGVzY3JpcHRpb25cbiAgICAgKiBSZXR1cm5zIHRoZSB2YWx1ZSBvZiBnaXZlbiBjb29raWUga2V5LlxuICAgICAqXG4gICAgICogQHBhcmFtIGtleSBJZCB0byB1c2UgZm9yIGxvb2t1cC5cbiAgICAgKiBAcmV0dXJucyBSYXcgY29va2llIHZhbHVlLlxuICAgICAqL1xuICAgIGdldChrZXk6IHN0cmluZyk6IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBAbmFtZSBDb29raWVTZXJ2aWNlI2dldE9iamVjdFxuICAgICAqXG4gICAgICogQGRlc2NyaXB0aW9uXG4gICAgICogUmV0dXJucyB0aGUgZGVzZXJpYWxpemVkIHZhbHVlIG9mIGdpdmVuIGNvb2tpZSBrZXkuXG4gICAgICpcbiAgICAgKiBAcGFyYW0ga2V5IElkIHRvIHVzZSBmb3IgbG9va3VwLlxuICAgICAqIEByZXR1cm5zIERlc2VyaWFsaXplZCBjb29raWUgdmFsdWUuXG4gICAgICovXG4gICAgZ2V0T2JqZWN0KGtleTogc3RyaW5nKTogT2JqZWN0O1xuICAgIC8qKlxuICAgICAqIEBuYW1lIENvb2tpZVNlcnZpY2UjZ2V0QWxsXG4gICAgICpcbiAgICAgKiBAZGVzY3JpcHRpb25cbiAgICAgKiBSZXR1cm5zIGEga2V5IHZhbHVlIG9iamVjdCB3aXRoIGFsbCB0aGUgY29va2llcy5cbiAgICAgKlxuICAgICAqIEByZXR1cm5zIEFsbCBjb29raWVzXG4gICAgICovXG4gICAgZ2V0QWxsKCk6IE9iamVjdDtcbiAgICAvKipcbiAgICAgKiBAbmFtZSBDb29raWVTZXJ2aWNlI3B1dFxuICAgICAqXG4gICAgICogQGRlc2NyaXB0aW9uXG4gICAgICogU2V0cyBhIHZhbHVlIGZvciBnaXZlbiBjb29raWUga2V5LlxuICAgICAqXG4gICAgICogQHBhcmFtIGtleSBJZCBmb3IgdGhlIGB2YWx1ZWAuXG4gICAgICogQHBhcmFtIHZhbHVlIFJhdyB2YWx1ZSB0byBiZSBzdG9yZWQuXG4gICAgICogQHBhcmFtIG9wdGlvbnMgKE9wdGlvbmFsKSBPcHRpb25zIG9iamVjdC5cbiAgICAgKi9cbiAgICBwdXQoa2V5OiBzdHJpbmcsIHZhbHVlOiBzdHJpbmcsIG9wdGlvbnM/OiBDb29raWVPcHRpb25zKTogdm9pZDtcbiAgICAvKipcbiAgICAgKiBAbmFtZSBDb29raWVTZXJ2aWNlI3B1dE9iamVjdFxuICAgICAqXG4gICAgICogQGRlc2NyaXB0aW9uXG4gICAgICogU2VyaWFsaXplcyBhbmQgc2V0cyBhIHZhbHVlIGZvciBnaXZlbiBjb29raWUga2V5LlxuICAgICAqXG4gICAgICogQHBhcmFtIGtleSBJZCBmb3IgdGhlIGB2YWx1ZWAuXG4gICAgICogQHBhcmFtIHZhbHVlIFZhbHVlIHRvIGJlIHN0b3JlZC5cbiAgICAgKiBAcGFyYW0gb3B0aW9ucyAoT3B0aW9uYWwpIE9wdGlvbnMgb2JqZWN0LlxuICAgICAqL1xuICAgIHB1dE9iamVjdChrZXk6IHN0cmluZywgdmFsdWU6IE9iamVjdCwgb3B0aW9ucz86IENvb2tpZU9wdGlvbnMpOiB2b2lkO1xuICAgIC8qKlxuICAgICAqIEBuYW1lIENvb2tpZVNlcnZpY2UjcmVtb3ZlXG4gICAgICpcbiAgICAgKiBAZGVzY3JpcHRpb25cbiAgICAgKiBSZW1vdmUgZ2l2ZW4gY29va2llLlxuICAgICAqXG4gICAgICogQHBhcmFtIGtleSBJZCBvZiB0aGUga2V5LXZhbHVlIHBhaXIgdG8gZGVsZXRlLlxuICAgICAqIEBwYXJhbSBvcHRpb25zIChPcHRpb25hbCkgT3B0aW9ucyBvYmplY3QuXG4gICAgICovXG4gICAgcmVtb3ZlKGtleTogc3RyaW5nLCBvcHRpb25zPzogQ29va2llT3B0aW9ucyk6IHZvaWQ7XG4gICAgLyoqXG4gICAgICogQG5hbWUgQ29va2llU2VydmljZSNyZW1vdmVBbGxcbiAgICAgKlxuICAgICAqIEBkZXNjcmlwdGlvblxuICAgICAqIFJlbW92ZSBhbGwgY29va2llcy5cbiAgICAgKi9cbiAgICByZW1vdmVBbGwob3B0aW9ucz86IENvb2tpZU9wdGlvbnMpOiB2b2lkO1xuICAgIHByaXZhdGUgX2Nvb2tpZVJlYWRlcjtcbiAgICBwcml2YXRlIF9jb29raWVXcml0ZXI7XG4gICAgcHJpdmF0ZSBfYnVpbGRDb29raWVTdHJpbmc7XG59XG4iXX0=