/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
import { ElementRef } from '@angular/core';
import { BaseDirective2, StyleUtils, MediaMarshaller, StyleBuilder, StyleDefinition } from '@angular/flex-layout/core';
import * as ɵngcc0 from '@angular/core';
export declare class GridRowStyleBuilder extends StyleBuilder {
    buildStyles(input: string): {
        'grid-row': string;
    };
    static ɵfac: ɵngcc0.ɵɵFactoryDef<GridRowStyleBuilder>;
}
export declare class GridRowDirective extends BaseDirective2 {
    protected DIRECTIVE_KEY: string;
    constructor(elementRef: ElementRef, styleBuilder: GridRowStyleBuilder, styler: StyleUtils, marshal: MediaMarshaller);
    protected styleCache: Map<string, StyleDefinition>;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<GridRowDirective>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<GridRowDirective, never, never, {}, {}, never>;
}
/**
 * 'grid-row' CSS Grid styling directive
 * Configures the name or position of an element within the grid
 * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-26
 */
export declare class DefaultGridRowDirective extends GridRowDirective {
    protected inputs: string[];
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DefaultGridRowDirective>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<DefaultGridRowDirective, "  [gdRow],  [gdRow.xs], [gdRow.sm], [gdRow.md], [gdRow.lg], [gdRow.xl],  [gdRow.lt-sm], [gdRow.lt-md], [gdRow.lt-lg], [gdRow.lt-xl],  [gdRow.gt-xs], [gdRow.gt-sm], [gdRow.gt-md], [gdRow.gt-lg]", never, {
    "gdRow": "gdRow";
    "gdRow.xs": "gdRow.xs";
    "gdRow.sm": "gdRow.sm";
    "gdRow.md": "gdRow.md";
    "gdRow.lg": "gdRow.lg";
    "gdRow.xl": "gdRow.xl";
    "gdRow.lt-sm": "gdRow.lt-sm";
    "gdRow.lt-md": "gdRow.lt-md";
    "gdRow.lt-lg": "gdRow.lt-lg";
    "gdRow.lt-xl": "gdRow.lt-xl";
    "gdRow.gt-xs": "gdRow.gt-xs";
    "gdRow.gt-sm": "gdRow.gt-sm";
    "gdRow.gt-md": "gdRow.gt-md";
    "gdRow.gt-lg": "gdRow.gt-lg";
}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm93LmQudHMiLCJzb3VyY2VzIjpbInJvdy5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7O0FBU0E7Ozs7O0FBSUE7Ozs7Ozs7QUFLQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQVFBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEdvb2dsZSBMTEMgQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2FuZ3VsYXIuaW8vbGljZW5zZVxuICovXG5pbXBvcnQgeyBFbGVtZW50UmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBCYXNlRGlyZWN0aXZlMiwgU3R5bGVVdGlscywgTWVkaWFNYXJzaGFsbGVyLCBTdHlsZUJ1aWxkZXIsIFN0eWxlRGVmaW5pdGlvbiB9IGZyb20gJ0Bhbmd1bGFyL2ZsZXgtbGF5b3V0L2NvcmUnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgR3JpZFJvd1N0eWxlQnVpbGRlciBleHRlbmRzIFN0eWxlQnVpbGRlciB7XG4gICAgYnVpbGRTdHlsZXMoaW5wdXQ6IHN0cmluZyk6IHtcbiAgICAgICAgJ2dyaWQtcm93Jzogc3RyaW5nO1xuICAgIH07XG59XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBHcmlkUm93RGlyZWN0aXZlIGV4dGVuZHMgQmFzZURpcmVjdGl2ZTIge1xuICAgIHByb3RlY3RlZCBESVJFQ1RJVkVfS0VZOiBzdHJpbmc7XG4gICAgY29uc3RydWN0b3IoZWxlbWVudFJlZjogRWxlbWVudFJlZiwgc3R5bGVCdWlsZGVyOiBHcmlkUm93U3R5bGVCdWlsZGVyLCBzdHlsZXI6IFN0eWxlVXRpbHMsIG1hcnNoYWw6IE1lZGlhTWFyc2hhbGxlcik7XG4gICAgcHJvdGVjdGVkIHN0eWxlQ2FjaGU6IE1hcDxzdHJpbmcsIFN0eWxlRGVmaW5pdGlvbj47XG59XG4vKipcbiAqICdncmlkLXJvdycgQ1NTIEdyaWQgc3R5bGluZyBkaXJlY3RpdmVcbiAqIENvbmZpZ3VyZXMgdGhlIG5hbWUgb3IgcG9zaXRpb24gb2YgYW4gZWxlbWVudCB3aXRoaW4gdGhlIGdyaWRcbiAqIEBzZWUgaHR0cHM6Ly9jc3MtdHJpY2tzLmNvbS9zbmlwcGV0cy9jc3MvY29tcGxldGUtZ3VpZGUtZ3JpZC8jYXJ0aWNsZS1oZWFkZXItaWQtMjZcbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgRGVmYXVsdEdyaWRSb3dEaXJlY3RpdmUgZXh0ZW5kcyBHcmlkUm93RGlyZWN0aXZlIHtcbiAgICBwcm90ZWN0ZWQgaW5wdXRzOiBzdHJpbmdbXTtcbn1cbiJdfQ==