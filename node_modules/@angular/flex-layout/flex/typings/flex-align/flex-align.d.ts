/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
import { ElementRef } from '@angular/core';
import { MediaMarshaller, BaseDirective2, StyleBuilder, StyleDefinition, StyleUtils } from '@angular/flex-layout/core';
import * as ɵngcc0 from '@angular/core';
export declare class FlexAlignStyleBuilder extends StyleBuilder {
    buildStyles(input: string): StyleDefinition;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<FlexAlignStyleBuilder>;
}
/**
 * 'flex-align' flexbox styling directive
 * Allows element-specific overrides for cross-axis alignments in a layout container
 * @see https://css-tricks.com/almanac/properties/a/align-self/
 */
export declare class FlexAlignDirective extends BaseDirective2 {
    protected DIRECTIVE_KEY: string;
    constructor(elRef: ElementRef, styleUtils: StyleUtils, styleBuilder: FlexAlignStyleBuilder, marshal: MediaMarshaller);
    protected styleCache: Map<string, StyleDefinition>;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<FlexAlignDirective>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<FlexAlignDirective, never, never, {}, {}, never>;
}
export declare class DefaultFlexAlignDirective extends FlexAlignDirective {
    protected inputs: string[];
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DefaultFlexAlignDirective>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<DefaultFlexAlignDirective, "  [fxFlexAlign], [fxFlexAlign.xs], [fxFlexAlign.sm], [fxFlexAlign.md],  [fxFlexAlign.lg], [fxFlexAlign.xl], [fxFlexAlign.lt-sm], [fxFlexAlign.lt-md],  [fxFlexAlign.lt-lg], [fxFlexAlign.lt-xl], [fxFlexAlign.gt-xs], [fxFlexAlign.gt-sm],  [fxFlexAlign.gt-md], [fxFlexAlign.gt-lg]", never, {
    "fxFlexAlign": "fxFlexAlign";
    "fxFlexAlign.xs": "fxFlexAlign.xs";
    "fxFlexAlign.sm": "fxFlexAlign.sm";
    "fxFlexAlign.md": "fxFlexAlign.md";
    "fxFlexAlign.lg": "fxFlexAlign.lg";
    "fxFlexAlign.xl": "fxFlexAlign.xl";
    "fxFlexAlign.lt-sm": "fxFlexAlign.lt-sm";
    "fxFlexAlign.lt-md": "fxFlexAlign.lt-md";
    "fxFlexAlign.lt-lg": "fxFlexAlign.lt-lg";
    "fxFlexAlign.lt-xl": "fxFlexAlign.lt-xl";
    "fxFlexAlign.gt-xs": "fxFlexAlign.gt-xs";
    "fxFlexAlign.gt-sm": "fxFlexAlign.gt-sm";
    "fxFlexAlign.gt-md": "fxFlexAlign.gt-md";
    "fxFlexAlign.gt-lg": "fxFlexAlign.gt-lg";
}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmxleC1hbGlnbi5kLnRzIiwic291cmNlcyI6WyJmbGV4LWFsaWduLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7QUFTQTs7O0FBRUE7Ozs7Ozs7Ozs7OztBQVVBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUdBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEdvb2dsZSBMTEMgQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2FuZ3VsYXIuaW8vbGljZW5zZVxuICovXG5pbXBvcnQgeyBFbGVtZW50UmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBNZWRpYU1hcnNoYWxsZXIsIEJhc2VEaXJlY3RpdmUyLCBTdHlsZUJ1aWxkZXIsIFN0eWxlRGVmaW5pdGlvbiwgU3R5bGVVdGlscyB9IGZyb20gJ0Bhbmd1bGFyL2ZsZXgtbGF5b3V0L2NvcmUnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgRmxleEFsaWduU3R5bGVCdWlsZGVyIGV4dGVuZHMgU3R5bGVCdWlsZGVyIHtcbiAgICBidWlsZFN0eWxlcyhpbnB1dDogc3RyaW5nKTogU3R5bGVEZWZpbml0aW9uO1xufVxuLyoqXG4gKiAnZmxleC1hbGlnbicgZmxleGJveCBzdHlsaW5nIGRpcmVjdGl2ZVxuICogQWxsb3dzIGVsZW1lbnQtc3BlY2lmaWMgb3ZlcnJpZGVzIGZvciBjcm9zcy1heGlzIGFsaWdubWVudHMgaW4gYSBsYXlvdXQgY29udGFpbmVyXG4gKiBAc2VlIGh0dHBzOi8vY3NzLXRyaWNrcy5jb20vYWxtYW5hYy9wcm9wZXJ0aWVzL2EvYWxpZ24tc2VsZi9cbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgRmxleEFsaWduRGlyZWN0aXZlIGV4dGVuZHMgQmFzZURpcmVjdGl2ZTIge1xuICAgIHByb3RlY3RlZCBESVJFQ1RJVkVfS0VZOiBzdHJpbmc7XG4gICAgY29uc3RydWN0b3IoZWxSZWY6IEVsZW1lbnRSZWYsIHN0eWxlVXRpbHM6IFN0eWxlVXRpbHMsIHN0eWxlQnVpbGRlcjogRmxleEFsaWduU3R5bGVCdWlsZGVyLCBtYXJzaGFsOiBNZWRpYU1hcnNoYWxsZXIpO1xuICAgIHByb3RlY3RlZCBzdHlsZUNhY2hlOiBNYXA8c3RyaW5nLCBTdHlsZURlZmluaXRpb24+O1xufVxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgRGVmYXVsdEZsZXhBbGlnbkRpcmVjdGl2ZSBleHRlbmRzIEZsZXhBbGlnbkRpcmVjdGl2ZSB7XG4gICAgcHJvdGVjdGVkIGlucHV0czogc3RyaW5nW107XG59XG4iXX0=