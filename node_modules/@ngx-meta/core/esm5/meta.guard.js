import * as tslib_1 from "tslib";
import { Injectable } from '@angular/core';
import { MetaService } from './meta.service';
import * as ɵngcc0 from '@angular/core';
var MetaGuard = (function () {
    function MetaGuard(meta) {
        this.meta = meta;
    }
    MetaGuard.prototype.canActivate = function (route, state) {
        var url = state.url;
        var metaSettings = route.hasOwnProperty('data') ? route.data.meta : undefined;
        this.meta.update(url, metaSettings);
        return true;
    };
    MetaGuard.prototype.canActivateChild = function (route, state) {
        return this.canActivate(route, state);
    };
    MetaGuard.ctorParameters = function () { return [
        { type: MetaService }
    ]; };
    MetaGuard = tslib_1.__decorate([ tslib_1.__metadata("design:paramtypes", [MetaService])
    ], MetaGuard);
MetaGuard.ɵfac = function MetaGuard_Factory(t) { return new (t || MetaGuard)(ɵngcc0.ɵɵinject(MetaService)); };
MetaGuard.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: MetaGuard, factory: function (t) { return MetaGuard.ɵfac(t); } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MetaGuard, [{
        type: Injectable
    }], function () { return [{ type: MetaService }]; }, null); })();
    return MetaGuard;
}());
export { MetaGuard };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWV0YS5ndWFyZC5qcyIsInNvdXJjZXMiOlsibmc6L0BuZ3gtbWV0YS9jb3JlL21ldGEuZ3VhcmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFHM0MsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDOztBQUc3QztJQUNFLG1CQUE2QixJQUFpQjtRQUFqQixTQUFJLEdBQUosSUFBSSxDQUFhO0lBQUcsQ0FBQztJQUVsRCwrQkFBVyxHQUFYLFVBQVksS0FBNkIsRUFBRSxLQUEwQjtRQUNuRSxJQUFNLEdBQUcsR0FBRyxLQUFLLENBQUMsR0FBRyxDQUFDO1FBRXRCLElBQU0sWUFBWSxHQUFHLEtBQUssQ0FBQyxjQUFjLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUM7UUFFaEYsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxFQUFFLFlBQVksQ0FBQyxDQUFDO1FBRXBDLE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUVELG9DQUFnQixHQUFoQixVQUFpQixLQUE2QixFQUFFLEtBQTBCO1FBQ3hFLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQyxLQUFLLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDeEMsQ0FBQzs7Z0JBZGtDLFdBQVc7O0lBRG5DLFNBQVMsdUJBQXVCLFNBRDVDLFVBQVUsRUFBRSxyQkFDTCwwQ0FDNkIsV0FBVztPQURuQyxTQUFTLENBZ0JyQjs7Ozs7cUVBQ0Q7SUFEQSxnQkFBQztDQUFBLEFBaEJELElBZ0JDO1NBaEJZLFNBQVMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBBY3RpdmF0ZWRSb3V0ZVNuYXBzaG90LCBDYW5BY3RpdmF0ZSwgQ2FuQWN0aXZhdGVDaGlsZCwgUm91dGVyU3RhdGVTbmFwc2hvdCB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XG5cbmltcG9ydCB7IE1ldGFTZXJ2aWNlIH0gZnJvbSAnLi9tZXRhLnNlcnZpY2UnO1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgTWV0YUd1YXJkIGltcGxlbWVudHMgQ2FuQWN0aXZhdGUsIENhbkFjdGl2YXRlQ2hpbGQge1xuICBjb25zdHJ1Y3Rvcihwcml2YXRlIHJlYWRvbmx5IG1ldGE6IE1ldGFTZXJ2aWNlKSB7fVxuXG4gIGNhbkFjdGl2YXRlKHJvdXRlOiBBY3RpdmF0ZWRSb3V0ZVNuYXBzaG90LCBzdGF0ZTogUm91dGVyU3RhdGVTbmFwc2hvdCk6IGJvb2xlYW4ge1xuICAgIGNvbnN0IHVybCA9IHN0YXRlLnVybDtcblxuICAgIGNvbnN0IG1ldGFTZXR0aW5ncyA9IHJvdXRlLmhhc093blByb3BlcnR5KCdkYXRhJykgPyByb3V0ZS5kYXRhLm1ldGEgOiB1bmRlZmluZWQ7XG5cbiAgICB0aGlzLm1ldGEudXBkYXRlKHVybCwgbWV0YVNldHRpbmdzKTtcblxuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgY2FuQWN0aXZhdGVDaGlsZChyb3V0ZTogQWN0aXZhdGVkUm91dGVTbmFwc2hvdCwgc3RhdGU6IFJvdXRlclN0YXRlU25hcHNob3QpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5jYW5BY3RpdmF0ZShyb3V0ZSwgc3RhdGUpO1xuICB9XG59XG4iXX0=