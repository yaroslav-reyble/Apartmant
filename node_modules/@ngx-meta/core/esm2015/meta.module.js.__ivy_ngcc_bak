var MetaModule_1;
import * as tslib_1 from "tslib";
import { NgModule, Optional, SkipSelf } from '@angular/core';
import { MetaGuard } from './meta.guard';
import { MetaLoader, MetaStaticLoader } from './meta.loader';
import { MetaService } from './meta.service';
export const metaFactory = () => new MetaStaticLoader();
let MetaModule = MetaModule_1 = class MetaModule {
    constructor(parentModule) {
        if (parentModule) {
            throw new Error('MetaModule already loaded; import in root module only.');
        }
    }
    static forRoot(configuredProvider = {
        provide: MetaLoader,
        useFactory: metaFactory
    }) {
        return {
            ngModule: MetaModule_1,
            providers: [configuredProvider, MetaGuard, MetaService]
        };
    }
};
MetaModule.ctorParameters = () => [
    { type: MetaModule, decorators: [{ type: Optional }, { type: SkipSelf }] }
];
MetaModule = MetaModule_1 = tslib_1.__decorate([
    NgModule(),
    tslib_1.__param(0, Optional()), tslib_1.__param(0, SkipSelf()),
    tslib_1.__metadata("design:paramtypes", [MetaModule])
], MetaModule);
export { MetaModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWV0YS5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Abmd4LW1ldGEvY29yZS8iLCJzb3VyY2VzIjpbIm1ldGEubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsT0FBTyxFQUF1QixRQUFRLEVBQUUsUUFBUSxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUVsRixPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sY0FBYyxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxVQUFVLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDN0QsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRTdDLE1BQU0sQ0FBQyxNQUFNLFdBQVcsR0FBRyxHQUFHLEVBQUUsQ0FBQyxJQUFJLGdCQUFnQixFQUFFLENBQUM7QUFHeEQsSUFBYSxVQUFVLGtCQUF2QixNQUFhLFVBQVU7SUFhckIsWUFBb0MsWUFBeUI7UUFDM0QsSUFBSSxZQUFZLEVBQUU7WUFDaEIsTUFBTSxJQUFJLEtBQUssQ0FBQyx3REFBd0QsQ0FBQyxDQUFDO1NBQzNFO0lBQ0gsQ0FBQztJQWhCRCxNQUFNLENBQUMsT0FBTyxDQUNaLHFCQUEwQjtRQUN4QixPQUFPLEVBQUUsVUFBVTtRQUNuQixVQUFVLEVBQUUsV0FBVztLQUN4QjtRQUVELE9BQU87WUFDTCxRQUFRLEVBQUUsWUFBVTtZQUNwQixTQUFTLEVBQUUsQ0FBQyxrQkFBa0IsRUFBRSxTQUFTLEVBQUUsV0FBVyxDQUFDO1NBQ3hELENBQUM7SUFDSixDQUFDO0NBT0YsQ0FBQTs7WUFMb0QsVUFBVSx1QkFBaEQsUUFBUSxZQUFJLFFBQVE7O0FBYnRCLFVBQVU7SUFEdEIsUUFBUSxFQUFFO0lBY0ksbUJBQUEsUUFBUSxFQUFFLENBQUEsRUFBRSxtQkFBQSxRQUFRLEVBQUUsQ0FBQTs2Q0FBZ0IsVUFBVTtHQWJsRCxVQUFVLENBa0J0QjtTQWxCWSxVQUFVIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTW9kdWxlV2l0aFByb3ZpZGVycywgTmdNb2R1bGUsIE9wdGlvbmFsLCBTa2lwU2VsZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBNZXRhR3VhcmQgfSBmcm9tICcuL21ldGEuZ3VhcmQnO1xuaW1wb3J0IHsgTWV0YUxvYWRlciwgTWV0YVN0YXRpY0xvYWRlciB9IGZyb20gJy4vbWV0YS5sb2FkZXInO1xuaW1wb3J0IHsgTWV0YVNlcnZpY2UgfSBmcm9tICcuL21ldGEuc2VydmljZSc7XG5cbmV4cG9ydCBjb25zdCBtZXRhRmFjdG9yeSA9ICgpID0+IG5ldyBNZXRhU3RhdGljTG9hZGVyKCk7XG5cbkBOZ01vZHVsZSgpXG5leHBvcnQgY2xhc3MgTWV0YU1vZHVsZSB7XG4gIHN0YXRpYyBmb3JSb290KFxuICAgIGNvbmZpZ3VyZWRQcm92aWRlcjogYW55ID0ge1xuICAgICAgcHJvdmlkZTogTWV0YUxvYWRlcixcbiAgICAgIHVzZUZhY3Rvcnk6IG1ldGFGYWN0b3J5XG4gICAgfVxuICApOiBNb2R1bGVXaXRoUHJvdmlkZXJzIHtcbiAgICByZXR1cm4ge1xuICAgICAgbmdNb2R1bGU6IE1ldGFNb2R1bGUsXG4gICAgICBwcm92aWRlcnM6IFtjb25maWd1cmVkUHJvdmlkZXIsIE1ldGFHdWFyZCwgTWV0YVNlcnZpY2VdXG4gICAgfTtcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKEBPcHRpb25hbCgpIEBTa2lwU2VsZigpIHBhcmVudE1vZHVsZT86IE1ldGFNb2R1bGUpIHtcbiAgICBpZiAocGFyZW50TW9kdWxlKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ01ldGFNb2R1bGUgYWxyZWFkeSBsb2FkZWQ7IGltcG9ydCBpbiByb290IG1vZHVsZSBvbmx5LicpO1xuICAgIH1cbiAgfVxufVxuIl19