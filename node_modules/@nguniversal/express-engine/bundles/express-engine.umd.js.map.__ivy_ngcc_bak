{"version":3,"file":"express-engine.umd.js","sources":["../../../../../../modules/common/engine/src/file-loader.ts","../../../../../../modules/common/engine/src/engine.ts","../../../../../../modules/common/engine/private_api.ts","../../../../../../modules/common/engine/public_api.ts","../../../../../../modules/common/engine/index.ts","../../../../../modules/express-engine/src/main.ts","../../../../../modules/express-engine/public_api.ts","../../../../../modules/express-engine/index.ts","../../../../../modules/express-engine/express-engine.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ResourceLoader } from '@angular/compiler';\nimport * as fs from 'fs';\n\n/** ResourceLoader implementation for loading files */\nexport class FileLoader implements ResourceLoader {\n  get(url: string): Promise<string> {\n    return new Promise((resolve, reject) => {\n      fs.readFile(url, (err: NodeJS.ErrnoException | null, data: Buffer) => {\n        if (err) {\n          return reject(err);\n        }\n\n        resolve(data.toString());\n      });\n    });\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ResourceLoader } from '@angular/compiler';\nimport { Compiler, CompilerFactory, NgModuleFactory, StaticProvider, Type } from '@angular/core';\nimport { INITIAL_CONFIG, platformDynamicServer, renderModuleFactory } from '@angular/platform-server';\nimport * as fs from 'fs';\n\nimport { FileLoader } from './file-loader';\nimport { RenderOptions } from './interfaces';\n\n/**\n * A common rendering engine utility. This abstracts the logic\n * for handling the platformServer compiler, the module cache, and\n * the document loader\n */\nexport class CommonEngine {\n\n  /** Return an instance of the platformServer compiler */\n  getCompiler(): Compiler {\n    const compilerFactory: CompilerFactory = platformDynamicServer().injector.get(CompilerFactory);\n\n    return compilerFactory.createCompiler([\n      {providers: [{provide: ResourceLoader, useClass: FileLoader, deps: []}]}\n    ]);\n  }\n\n  private factoryCacheMap = new Map<Type<{}>, NgModuleFactory<{}>>();\n  private templateCache: {[key: string]: string} = {};\n\n  constructor(private moduleOrFactory?: Type<{}> | NgModuleFactory<{}>,\n              private providers: StaticProvider[] = []) {}\n\n  /**\n   * Render an HTML document for a specific URL with specified\n   * render options\n   */\n  async render(opts: RenderOptions): Promise<string> {\n    // if opts.document dosen't exist then opts.documentFilePath must\n    const doc = opts.document || await this.getDocument(opts.documentFilePath as string);\n    const extraProviders = [\n      ...(opts.providers || []),\n      ...(this.providers || []),\n      {\n        provide: INITIAL_CONFIG,\n        useValue: {\n          document: doc,\n          url: opts.url\n        }\n      }\n    ];\n\n    const moduleOrFactory = this.moduleOrFactory || opts.bootstrap;\n    const factory = await this.getFactory(moduleOrFactory);\n\n    return renderModuleFactory(factory, {extraProviders});\n  }\n\n  /** Return the factory for a given engine instance */\n  async getFactory(moduleOrFactory: Type<{}> | NgModuleFactory<{}>): Promise<NgModuleFactory<{}>> {\n    // If module has been compiled AoT\n    if (moduleOrFactory instanceof NgModuleFactory) {\n      return moduleOrFactory;\n    } else {\n      // we're in JIT mode\n      const moduleFactory = this.factoryCacheMap.get(moduleOrFactory);\n\n      // If module factory is cached\n      if (moduleFactory) {\n        return moduleFactory;\n      }\n\n      // Compile the module and cache it\n      const factory = await this.getCompiler().compileModuleAsync(moduleOrFactory);\n      this.factoryCacheMap.set(moduleOrFactory, factory);\n\n      return factory;\n    }\n  }\n\n  /** Retrieve the document from the cache or the filesystem */\n  private getDocument(filePath: string): Promise<string> {\n    const doc = this.templateCache[filePath] = this.templateCache[filePath] ||\n    fs.readFileSync(filePath).toString();\n\n    // As  promise so we can change the API later without breaking\n    return Promise.resolve(doc);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport { FileLoader as ɵFileLoader, CommonEngine as ɵCommonEngine,\n  RenderOptions as ɵRenderOptions } from './src/index';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport * from './private_api';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport * from './public_api';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Request, Response } from 'express';\nimport * as fs from 'fs';\n\nimport { NgModuleFactory, StaticProvider, Type } from '@angular/core';\nimport { ɵCommonEngine as CommonEngine } from '@nguniversal/common/engine';\nimport { REQUEST, RESPONSE } from '@nguniversal/express-engine/tokens';\n\n/**\n * These are the allowed options for the engine\n */\nexport interface NgSetupOptions {\n  bootstrap: Type<{}> | NgModuleFactory<{}>;\n  providers?: StaticProvider[];\n}\n\n/**\n * These are the allowed options for the render\n */\nexport interface RenderOptions extends NgSetupOptions {\n  req: Request;\n  res?: Response;\n  url?: string;\n  document?: string;\n}\n\n/**\n * This holds a cached version of each index used.\n */\nconst templateCache: { [key: string]: string } = {};\n\n/**\n * This is an express engine for handling Angular Applications\n */\nexport function ngExpressEngine(setupOptions: Readonly<NgSetupOptions>) {\n  const engine = new CommonEngine(setupOptions.bootstrap, setupOptions.providers);\n\n  return function (filePath: string,\n                   options: Readonly<RenderOptions>,\n                   callback: (err?: Error | null, html?: string) => void) {\n    try {\n      if (!setupOptions.bootstrap && !options.bootstrap) {\n        throw new Error('You must pass in a NgModule or NgModuleFactory to be bootstrapped');\n      }\n\n      const req = options.req;\n\n      const renderOptions: RenderOptions = Object.assign({}, options);\n\n      renderOptions.url =\n        options.url || `${req.protocol}://${(req.get('host') || '')}${req.originalUrl}`;\n      renderOptions.document = options.document || getDocument(filePath);\n\n      renderOptions.providers = options.providers || [];\n      renderOptions.providers =\n        renderOptions.providers.concat(getReqResProviders(options.req, options.res));\n\n      engine.render(renderOptions)\n        .then(html => callback(null, html))\n        .catch(callback);\n    } catch (err) {\n      callback(err);\n    }\n  };\n}\n\n/**\n * Get providers of the request and response\n */\nfunction getReqResProviders(req: Request, res?: Response): StaticProvider[] {\n  const providers: StaticProvider[] = [\n    {\n      provide: REQUEST,\n      useValue: req\n    }\n  ];\n  if (res) {\n    providers.push({\n      provide: RESPONSE,\n      useValue: res\n    });\n  }\n\n  return providers;\n}\n\n/**\n * Get the document at the file path\n */\nfunction getDocument(filePath: string): string {\n  return templateCache[filePath] = templateCache[filePath] || fs.readFileSync(filePath).toString();\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport { ngExpressEngine, NgSetupOptions, RenderOptions } from './src/main';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport * from './public_api';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["fs.readFile","platformDynamicServer","CompilerFactory","ResourceLoader","INITIAL_CONFIG","renderModuleFactory","NgModuleFactory","fs.readFileSync","REQUEST","RESPONSE"],"mappings":"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"}